sim-safe: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: loading EIO file: /cad2/ece552f/benchmarks/gcc.eio
sim: command line: ./sim-safe -max:inst 1000000 -redir:sim gcc.simout -redir:prog gcc.progout /cad2/ece552f/benchmarks/gcc.eio 

sim: simulation started @ Tue Oct 31 22:04:46 2023, options follow:

sim-safe: This simulator implements a functional simulator.  This
functional simulator is the simplest, most user-friendly simulator in the
simplescalar tool set.  Unlike sim-fast, this functional simulator checks
for all instruction errors, and the implementation is crafted for clarity
rather than speed.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim       gcc.simout # redirect simulator output to file (non-interactive only)
# -redir:prog     gcc.progout # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst             1000000 # maximum number of inst's to execute

sim: ** starting functional simulation **
sim-safe: tomasulo.c:473: dispatch_To_issue: Assertion `false' failed.
